@page "/books"

@using ShopApp.Core
@using MudBlazor
@using ShopApp.UseCases.Services.Book
@using ShopApp.UseCases.Services.Category


@inject IBookService bookService
@inject ICategoryService categoryService
@inject IDialogService DialogService


@rendermode InteractiveServer 


<MudDialogProvider />

@if (isLoading)
{
    <div class="progress-container">
        <div class="progress"></div>
    </div>
}
else
{
    <div class="container">
        <div style="text-align: right; margin-bottom: 20px;">
            <button class="btn-primary" @onclick="AddBook">Adaugă Carte</button>
        </div>
        <h2>All Books</h2>
        <table class="table">
            <thead>
                <tr>
                    <th>Denumire</th>
                    <th>Autor</th>
                    <th>Preț</th>
                    <th>Acțiuni</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var book in books)
                {
                    <tr>
                        <td>@book.Title</td>
                        <td>@book.Author</td>
                        <td>@book.Price</td>
                        <td class="actions">
                            <button class="btn-success" @onclick="@(() => EditBook(book.Id))">Editează</button>
                            <button class="btn-danger" @onclick="@(() => DeleteAsync(book.Id))">Șterge</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private bool isLoading = true;
    private List<Book> books = new List<Book>();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
        isLoading = false;
    }

    private async Task LoadData()
    {
        var result = await bookService.GetAllAsync();
        books = result ?? new List<Book>();
    }

    private async Task DeleteAsync(Guid id)
    {
        await bookService.DeleteAsync(id);
        await LoadData();
    }

    private void AddBook()
    {
        var parameters = new DialogParameters
        {
            { "Callback", new Func<Task>(LoadData) }
        };
        DialogService.Show<AddEditBookDialog>("Adaugă Carte", parameters);
    }

    private void EditBook(Guid bookId)
    {
        var parameters = new DialogParameters
        {
            { "Id", bookId },
            { "Callback", new Func<Task>(LoadData) }
        };
        DialogService.Show<AddEditBookDialog>("Editează Carte", parameters);
    }
}

